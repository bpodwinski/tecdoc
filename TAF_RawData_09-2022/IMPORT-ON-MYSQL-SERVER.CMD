@ECHO OFF
REM chcp 65001

REM SCRIPT FOR IMPORT SQL SCRIPTS ON OWN MYSQL SERVER
REM -------------------------------------------------
REM NOTE 
REM 1. ON MYSQL SERVER NEED CREATE DATABASE (IN CASE NOT CREATED BEFORE), FOR EXAMPLE NAME AS "taf_24"
REM 2. CREATE TABLES (IF NOT WAS CREATED BEFORE) WITH HELP SCRIPT "CreateTablesTAF24.sql"
REM 3. IN THIS CMD-SCRIPT BELOW NEED SET ACCESS TO YOUR MYSQL SERVER (IF SERVER IS REMOTELLY THEN NEED THAT USER HAD PRIVILEGES FRO REMOTELLY CONNECT)
REM 4. ON PC WHERE PLACED SQL FILES (THAT NEED IMPORT) NEED HAVE INSTALLED MYSQL TOOL "mysql.exe" (IN CASE WHEN MYSQL SERVER IS REMOTELLY)

		REM NOTES :
		REM - "PATH_TO_SQL_FILES" PATH TO FOLDER WHERE NEED USE WITH LAST SYMBOL "\" - IF SET EMPTY VALUE THEN WILL USE CURRENT FOLDER WHERE PLACED THIS CMD-SCRIPT
		REM - "MYSQL_PATH" PATH TO MYSQL TOOL
		REM - "MYSQL_SERVER" DOMAIN NAME MYSQL SERVER OR IP
		REM - "MYSQL_PORT" PORT MYSQL SERVER (BY DEFAULT IS 3306)
		REM - "MYSQL_DATABASE" NAME DATABASE WHERE PLACED TABLES (FOR EXAMPLE "taf_24")
		REM - "MYSQL_USER" NAME USER (IN CASE REMOTELLY CONNECT MUST HAVE PRIVILEGE FOR CONNECT)
		REM - "MYSQL_PASSWORD" PASSWORD FOR USER
	
		SET "PATH_TO_SQL_FILES=D:\Tecdoc\SQL-CONVERTED\"
		SET "MYSQL_PATH=C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql.exe" 
		SET "MYSQL_SERVER=127.0.0.1"
		SET "MYSQL_PORT=3307"
		SET "MYSQL_DATABASE=tecdoc_full"
		SET "MYSQL_USER=root"
		SET "MYSQL_PASSWORD=824688Ygg"

REM -------------------------------------------------

REM IS FOLDER IS NOT SET
IF "%PATH_TO_SQL_FILES%" == "" (
	SET PATH_TO_SQL_FILES=%~dp0
	ECHO NOTE : WAS SET PATH TO FOLDER WITH SQL SCRIPT AS EMPTY VALUE, WILL CHANGED ON CURRENT FOLDER
	ECHO.
	)

REM CHECKING INPUT SETTINGS
ECHO INPUT PARAMETERS FOR IMPORT FILES
ECHO.
ECHO ^    PATH TO SQL FILES = [%PATH_TO_SQL_FILES%]
ECHO ^    PATH TO MYSQL TOOL = [%MYSQL_PATH%]
ECHO ^    MYSQL SERVER = [%MYSQL_SERVER%]
ECHO ^    MYSQL PORT = [%MYSQL_PORT%]
ECHO ^    MYSQL DATABASE = [%MYSQL_DATABASE%]
ECHO ^    MYSQL USER = [%MYSQL_USER%]
ECHO ^    MYSQL PASSWORD = [%MYSQL_PASSWORD%]

IF NOT EXIST "%PATH_TO_SQL_FILES%" (
	ECHO.
	ECHO WAS GET ERRORS :
	ECHO.
	ECHO ^   NOT FOUND FOLDER WHERE MUST PLACED SQL FILES "%PATH_TO_SQL_FILES%"
	ECHO.
	ECHO AFTER FIX ERROR NEED RESTART THIS CMD-SCRIPT
	ECHO.
	PAUSE
	exit
	)
	
IF NOT EXIST "%MYSQL_PATH%" (
	ECHO.
	ECHO WAS GET ERRORS :
	ECHO.
	ECHO ^   NOT FOUND MYSQL TOOL ON SET PATH "%MYSQL_PATH%"
	ECHO.
	ECHO AFTER FIX ERROR NEED RESTART THIS CMD-SCRIPT
	ECHO.
	PAUSE
	exit
	)
	
powershell -c "[System.IO.Directory]::GetFiles('%PATH_TO_SQL_FILES%', '*.sql').Count"> "counter.txt"
set /p counter_SQL_files=<"counter.txt"
IF EXIST "counter.txt" DEL "counter.txt"
IF "%counter_SQL_files%" == "0" (
	ECHO.
	ECHO WAS GET ERRORS :
	ECHO.
	ECHO ^   IN FOLDER "%PATH_TO_SQL_FILES%" NOT FOUND FILES WITH EXTENSION ".SQL"
	ECHO.
	ECHO AFTER FIX ERROR NEED RESTART THIS CMD-SCRIPT
	ECHO.
	PAUSE
	exit
	)
	
REM TEST CONNECT WITH MYSQL	
ECHO.
ECHO TEST CONNECTION WITH MYSQL SERVER
"%MYSQL_PATH%" -N --host="%MYSQL_SERVER%" --port=%MYSQL_PORT% --user="%MYSQL_USER%" --password="%MYSQL_PASSWORD%" "%MYSQL_DATABASE%" --execute="SELECT 'Connect with MYSQL server is successful'" > "MYSQL_status.txt"
set /p MYSQL_status=<"MYSQL_status.txt"
IF EXIST "MYSQL_status.txt" DEL "MYSQL_status.txt"
ECHO RESULT FROM MYSQL SERVER : [%MYSQL_status%]

REM ASK ABOUT CONTINUE
set /P id=Continue for import "%counter_SQL_files%"-files (Y/N):
IF "%id%" == "N" EXIT
IF "%id%" == "n" EXIT

REM START IMPORT FILES
dir /B "%PATH_TO_SQL_FILES%*.sql"> "LIST_SQL_FILES.txt"
ECHO.
ECHO.
ECHO -------------- START IMPORT FILES -----------------------

chcp 65001

SetLocal enabledelayedexpansion
SET /A CCC=0
For /F "tokens=* usebackq delims=" %%b In ("LIST_SQL_FILES.txt") Do (
		set "namefile=%%b"
		SET /A CCC+=1
		ECHO START IMPORT [!CCC! / %counter_SQL_files%] :: "!namefile!"
		"%MYSQL_PATH%" -N --host="%MYSQL_SERVER%" --port=%MYSQL_PORT% --user="%MYSQL_USER%" --password="%MYSQL_PASSWORD%" "%MYSQL_DATABASE%" < "%PATH_TO_SQL_FILES%!namefile!"
		ECHO.
		ECHO ******************************************
		)	
endlocal		

IF EXIST "LIST_SQL_FILES.txt" DEL "LIST_SQL_FILES.txt"

ECHO.
ECHO IMPORT FINISHED
ECHO.
PAUSE


