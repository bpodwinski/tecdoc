  1. Selecting the desired language
  2. Selecting the desired region or country (in case available divided regions in your data)
  3. Work with cars
     3.1. Choosing a manufacturer of car (with the possibility of separation on year, passenger, truck, motocycle and commercial vehicle)
	 3.2. Choosing a model of car
	 3.2. Choosing a type of car
	 3.3. Show info about selected car	 
	 3.4. Searching by Ktype and get Ktype value regarding value KBA, TypeMine, LicensePlate [Swiss, Netherland, Swedish, Austrian] (in case available those tables in your data)
	 3.5. Seraching by code engine (list vehicles where use engine)
	 3.6. Show info about engine
  4. Work with products
	 4.1. Show available suppliers
	 4.2. Search by artnumber - checking name of brands that use this search number
	 4.3. Main info of product
	 4.4. Cryteries of product
	 4.5. Additional info of product
	 4.6. Cross reference for product (own info from supplier)
	 4.7. Cross reference for product (advanced view - searching by own oe-numbers and searching other products where use search product)
	 4.8. Applicability to vehicles
	 4.9. Terms of use product for vehicle	 
	 4.10. Images and other links for product
	 4.11. Specification kit products or searching entry into kits
	 4.12. Accessories that need use for product (list products that not included in main product, but products that need use parallel)
  5. Creating catalog
	 5.1. List type of vehicles where use product
	 5.2. List products that use for selected vehicle	
	 5.3. Generate tree categories for selected vehicle
	 5.4. List products according selected category in tree categories for selected vehicle
	 5.5. Generate trade groups for selected vehicle	 
	 5.6. List products according selected trade group for selected vehicle
	 
***********************************************************************	 

  ADDITIONAL FUNCTIONS AND PROCEDURES
	  
		-- ==========================
		-- FUNCTION CLEANING INPUT ARTNUMBER (DELETE ADDITIONAL SYMBOLS AND SPACES, EXCEPT SYMBOLS A..Z, 0..9)
		
		DELIMITER $$
		CREATE FUNCTION `CLEAN_NUMBER`(STR VARCHAR(105) CHARSET utf8) RETURNS varchar(105) CHARSET utf8
			DETERMINISTIC
		BEGIN
			DECLARE LEN INT DEFAULT LENGTH(STR);
			DECLARE I INT DEFAULT 1;
			DECLARE NEWSTR VARCHAR(105) DEFAULT '';
			DECLARE C CHAR;

			WHILE I<=LEN DO
				SET C = SUBSTR(STR, I, 1);
				IF C >= 'a' AND C <= 'z' OR
				   C >= 'A' AND C <= 'Z' OR
				   C >= '0' AND C <= '9' THEN
					SET NEWSTR = CONCAT(NEWSTR, C);
				END IF;
				SET I = I+1;
			END WHILE;

			RETURN NEWSTR;
		END$$
		DELIMITER ;
		
		-- ==========================
		-- GET TEXT VALUE REGARDING VALUE "BEZNR" (USING IN DATA SUPPLIERS TABLES FOR VIEW TEXT IN NECESSARY LANAGUGES) AND ID-LANGUAGE "SPRACHNR"
		
		DELIMITER $$
		CREATE FUNCTION `GET_BEZNR`(BEZNR INT, SPRACHNR INT) RETURNS varchar(300) CHARSET utf8
			DETERMINISTIC
		BEGIN
			DECLARE RES VARCHAR(128) DEFAULT '';

			SET RES = (SELECT 
							LEFT(TRIM(GROUP_CONCAT(DISTINCT T030.BEZ SEPARATOR ', ')), 300)
						FROM `030` AS T030               
						WHERE T030.BEZNR = BEZNR AND T030.SPRACHNR = SPRACHNR);

			RETURN RES;
		END$$
		DELIMITER ;
		
		-- ==========================
		-- GET TEXT VALUE REGARDING VALUE "LBEZNR" (USING IN REFERENCE TABLES FOR VIEW TEXT IN NECESSARY LANAGUGES) AND ID-LANGUAGE "SPRACHNR"
		
		DELIMITER $$
		CREATE FUNCTION `GET_LBEZNR`(LBEZNR INT, SPRACHNR INT) RETURNS varchar(300) CHARSET utf8
			DETERMINISTIC
		BEGIN
			DECLARE RES VARCHAR(300) DEFAULT '';

			SET RES = (SELECT 
							LEFT(TRIM(GROUP_CONCAT(DISTINCT T012.BEZ SEPARATOR ', ')), 300)
						FROM `012` AS T012               
						WHERE T012.LBEZNR = LBEZNR AND T012.SPRACHNR = SPRACHNR
						limit 1);

			RETURN RES;
		END$$
		DELIMITER ;
		
		-- ==========================
		-- GET TEXT VALUE REGARDING VALUE "KEY TABLE" (SOME COLUMNS SOEM TABLES NOT USE DIRECTLY LINK ON TEXT TABLE AND USE ADDITIONAL KEY TABLE, 
		-- SIMILAR COLUMNS USE COMMENT WITH TEXT AS LIKE "KT XXX") AND ID-LANGUAGE "SPRACHNR"
		-- TABLES (120,160,532) WHERE CAN USE KEY TABLE
		
		DELIMITER $$
		CREATE FUNCTION `GET_BEZNR_FOR_KEY_TABLE`(TABNR INT, KEYY VARCHAR(3) CHARSET utf8, SPRACHNR INT) RETURNS varchar(300) CHARSET utf8
			DETERMINISTIC
		BEGIN
			DECLARE RES VARCHAR(128) DEFAULT '';

			SET RES = (SELECT 
							LEFT(TRIM(GROUP_CONCAT(DISTINCT T030.BEZ SEPARATOR ', ')), 300)
						FROM `030` AS T030    
							JOIN `052` AS T052 ON (T030.BEZNR = T052.BEZNR)
						WHERE T052.TABNR = TABNR 
							AND (T052.`KEY` = KEYY OR T052.`KEY` = IF(LENGTH(KEYY) = 1, CONCAT('00',KEYY), IF(LENGTH(KEYY) = 2, CONCAT('0',KEYY), LEFT(KEYY,3))))
							AND T030.SPRACHNR = SPRACHNR);

			RETURN RES;
		END$$
		DELIMITER ;


	

  ---------------------------------
  1. Selecting the desired language
  
		SET @IDLAND=4;  -- FOR FISRT START CAN USE ENGLISH LANGAUGE
		
		SELECT 
			SPRACHNR, -- ID LANGUAGE
			ISO_CODE, -- ISO CODE
			GET_BEZNR(BEZNR, @IDLAND) AS NAME  -- NAME LANAGUGE 
		FROM `020` AS T020;
		-- FOR EXAMPLE WE SELECTED SPRACHNR = 4 (ENGLISH)
	
  ---------------------------------
  2. Selecting the desired region or country (in case available divided regions in your data) where can use found spare parts and vehicles
  
		SET @SPRACHNR=4;  -- SELECTED ID LANG
		
		SELECT 
			LKZ, -- TECDOC CODE REGION			
			GET_BEZNR(BEZNR, @SPRACHNR) AS NAME,  -- NAME REGION OR COUNTRY 			
			ISTGRUPPE, -- MARK THAT THIS IS GROUP COUNTRIES			
			WKZ, -- CURRENCY (IN CASE COUNTRY)
			GET_BEZNR(WARBEZNR, @SPRACHNR) AS NAMECURR,  -- NAME CURRENCY
			ISOCODE2 -- ISO CODE COUNTRY
		FROM `010` AS T010;
		
		-- FOR EXAMPLE WE SELECTED LKZ = D (GERMANY)
		-- !!!!!!! BUT RIGHT WAY IS USE ALL VALUES, AS USUALLY CLIENT MAKE SUBSCRIBE DATA ALREADY ON NECESSARY REGION !!!!
  
  ---------------------------------
  3. Work with cars
     3.1. Choosing a manufacturer of car (with the possibility of separation on year, passenger or motocycle, truck or commercial vehicle)
	 
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)
		SET @LKZ='D';  -- SELECTED COUNTRY (GERMANY)
		SET @NEEDYEAR=2008;  -- FIND CAR FOR NECESSARY YEAR - IF = 0 THEN SELECTION FOR ANY YEAR, IF 4-SYMBOLS THEN FIND
		
		SELECT distinct
			T100.HERNR,  -- ID MANUFACTURER
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS NAME,  -- NAME MANUFACTURER
			T100.PKW, -- 0/1 MARK THAT MANUFACTURER IS PRODUCION PASSANGER CARS OR MOTORCYCLES
			T100.NKW, -- 0/1 MARK THAT MANUFACTURER IS PRODUCION TRUCK AND COMMERCIAL CARS
			T100.TRANSPORTER, -- 0/1 MARK THAT MANUFACTURER IS PRODUCION LIGHT COMMERCIAL VEHICLE
			T100.ACHSE, -- 0/1 MARK THAT MANUFACTURER IS PRODUCION AXLE FOR CARS
			T100.MOTOR, -- 0/1 MARK THAT MANUFACTURER IS PRODUCION MOTORS FOR CARS
			T100.GETRIEBE -- 0/1 MARK THAT MANUFACTURER IS PRODUCION TRANSMISSION FOR CARS						
		FROM `110` AS T110
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR			
		WHERE 1
			AND (CASE
					WHEN @NEEDYEAR = 0 OR LENGTH(@NEEDYEAR) <> 4 THEN 1					
					WHEN T110.BJVON <= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) AND IFNULL(T110.BJBIS, CAST(CONCAT(YEAR(NOW()),'12') AS UNSIGNED)) >= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) THEN 1
					ELSE 0
				END) = 1
		ORDER BY NAME;
		
		-- FOR EXAMPLE WE SELECTED HERNR = 120 (VOLVO) -- VOLVO IS SELECTED FOR SAMPLE AS THIS MANUFACTURER HAVE PASSANGER AND TRUCK CARS and FOR AXLE WE SELECTED HERNR = 885 (BPW)
			 
	 ---------------------------------
	 3.2. Choosing a model of car
	 
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)
		SET @LKZ='D';  -- SELECTED COUNTRY (GERMANY) -- RIGHT WAY USE ALL VALUES THAT IS SUBSCRIBED IN CLIENT DATA
		SET @NEEDYEAR=2008;  -- FIND CAR FOR NECESSARY YEAR - IF = 0 THEN SELECTION FOR ANY YEAR, IF 4-SYMBOLS THEN FIND
		SET @HERNR=120; -- SELECTED MANUFACTURER "VOLVO", AND ALSO IN CASE AXLE CAN USE = 885
		
		SELECT
			T110.KMODNR,  -- ID MODEL
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			T110.BJVON, -- MODEL PRODUCTING FROM YEAR+MONTH
			IFNULL(T110.BJBIS, 'to now'), -- MODEL PRODUCTING TO YEAR+MONTH
			T110.PKW, -- 0/1 MARK THAT MODEL IS PASSANGER CARS OR MOTORCYCLES
			T110.NKW, -- 0/1 MARK THAT MODEL IS TRUCK AND COMMERCIAL CARS
			T110.TRANSPORTER, -- 0/1 MARK THAT MODEL IS LIGHT COMMERCIAL VEHICLE
			T110.ACHSE -- 0/1 MARK THAT MODEL IS AXLE						
		FROM `110` AS T110
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR			
		WHERE 1 
			AND T100.HERNR = @HERNR
			AND (CASE
					WHEN @NEEDYEAR = 0 OR LENGTH(@NEEDYEAR) <> 4 THEN 1					
					WHEN T110.BJVON <= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) AND IFNULL(T110.BJBIS, CAST(CONCAT(YEAR(NOW()),'12') AS UNSIGNED)) >= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) THEN 1
					ELSE 0
				END) = 1
		ORDER BY T110.SORTNR;
		
		-- FOR EXAMPLE WE SELECTED KMODNR :
			-- PASSANGER CAR = 6390 (V70 III (BW))
			-- TRUCK CAR = 5555 (FL II)
			-- AXLE = 5170 
	 
	 ---------------------------------
	 3.3. Choosing a type of Passanger car| Truck | Axle
	 
		-- SELECTION PASSANGER CAR
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)
		SET @LKZ='D';  -- SELECTED COUNTRY (GERMANY) -- RIGHT WAY USE ALL VALUES THAT IS SUBSCRIBED IN CLIENT DATA
		SET @NEEDYEAR=2008;  -- FIND CAR FOR NECESSARY YEAR - IF = 0 THEN SELECTION FOR ANY YEAR, IF 4-SYMBOLS THEN FIND		
		SET @KMODNR=6390;  -- SELECTED MODEL "V70 III (BW)"
				
		SELECT
			T120.KTYPNR,  -- ID TYPE
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			GET_LBEZNR(T120.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE
			T120.BJVON, -- TYPE PRODUCTING FROM YEAR+MONTH
			IFNULL(T120.BJBIS, 'to now') -- TYPE PRODUCTING TO YEAR+MONTH								
		FROM `120` AS T120
			JOIN `110` AS T110 ON T110.KMODNR = T120.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR			
		WHERE 1 
			AND T110.KMODNR = @KMODNR
			AND (CASE
					WHEN @NEEDYEAR = 0 OR LENGTH(@NEEDYEAR) <> 4 THEN 1					
					WHEN T120.BJVON <= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) AND IFNULL(T120.BJBIS, CAST(CONCAT(YEAR(NOW()),'12') AS UNSIGNED)) >= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) THEN 1
					ELSE 0
				END) = 1
		ORDER BY T120.SORTNR;	
		
			-- FOR EXAMPLE WE SELECTED PASSANGER KTYPNR = 23150 (VOLVO V70 III (BW) 2.5 T [200708 - 200912])
		
		-- SELECTION TRUCK
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)
		SET @LKZ='D';  -- SELECTED COUNTRY (GERMANY) -- RIGHT WAY USE ALL VALUES THAT IS SUBSCRIBED IN CLIENT DATA
		SET @NEEDYEAR=2008;  -- FIND CAR FOR NECESSARY YEAR - IF = 0 THEN SELECTION FOR ANY YEAR, IF 4-SYMBOLS THEN FIND		
		SET @KMODNR=5555;  -- SELECTED MODEL "FL II"
				
		SELECT
			T532.NTYPNR,  -- ID TYPE
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			GET_LBEZNR(T532.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE
			T532.BJVON, -- TYPE PRODUCTING FROM YEAR+MONTH
			IFNULL(T532.BJBIS, 'to now') -- TYPE PRODUCTING TO YEAR+MONTH								
		FROM `532` AS T532
			JOIN `110` AS T110 ON T110.KMODNR = T532.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR			
		WHERE 1 
			AND T110.KMODNR = @KMODNR
			AND (CASE
					WHEN @NEEDYEAR = 0 OR LENGTH(@NEEDYEAR) <> 4 THEN 1					
					WHEN T532.BJVON <= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) AND IFNULL(T532.BJBIS, CAST(CONCAT(YEAR(NOW()),'12') AS UNSIGNED)) >= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) THEN 1
					ELSE 0
				END) = 1
		ORDER BY T532.SORT;	
		
			-- FOR EXAMPLE WE SELECTED TRUCK NTYPNR = 8513 (VOLVO FL II (FL 240-12) [200605 - ])
				
		-- SELECTION AXLE
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)
		SET @LKZ='D';  -- SELECTED COUNTRY (GERMANY) -- RIGHT WAY USE ALL VALUES THAT IS SUBSCRIBED IN CLIENT DATA
		SET @NEEDYEAR=2008;  -- FIND CAR FOR NECESSARY YEAR - IF = 0 THEN SELECTION FOR ANY YEAR, IF 4-SYMBOLS THEN FIND		
		SET @KMODNR=5170;  -- SELECTED MODEL AXLE "BPW H"
		
		SELECT
			T160.ATYPNR,  -- ID TYPE
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			T160.BEZEICHNUNG AS TYPE,  -- NAME TYPE
			T160.BJVON, -- TYPE PRODUCTING FROM YEAR+MONTH
			IFNULL(T160.BJBIS, 'to now') -- TYPE PRODUCTING TO YEAR+MONTH								
		FROM `160` AS T160
			JOIN `110` AS T110 ON T110.KMODNR = T160.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR			
		WHERE 1 
			AND T110.KMODNR = @KMODNR
			AND (CASE
					WHEN @NEEDYEAR = 0 OR LENGTH(@NEEDYEAR) <> 4 THEN 1					
					WHEN T160.BJVON <= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) AND IFNULL(T160.BJBIS, CAST(CONCAT(YEAR(NOW()),'12') AS UNSIGNED)) >= CAST(CONCAT(@NEEDYEAR,'01') AS UNSIGNED) THEN 1
					ELSE 0
				END) = 1
		ORDER BY T160.SORTNR;	
		
			-- FOR EXAMPLE WE SELECTED TRUCK ATYPNR = 1860 (BPW H H16000 [198201-])
	 
	 ---------------------------------
	 3.3. Show info about selected Passanger car| Truck | Axle
	 
		-- SHOW INFO PASSANGER CAR
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPNR=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		
		SELECT			
			T120.KTYPNR AS `KTYPNR`, 
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			GET_LBEZNR(T120.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE					
			T120.BJVON AS `BJVON`, 
			IFNULL(T120.BJBIS, 'to now') AS `BJBIS`, 
			IFNULL(T120.KW, '') AS `KW`, 
			IFNULL(T120.PS, '') AS `PS`, 
			IFNULL(T120.CCMSTEUER, '') AS `CCMSTEUER`, 
			IFNULL(T120.CCMTECH, '') AS `CCMTECH`, 
			IFNULL(T120.LIT, '') AS `LIT`, 
			IFNULL(T120.ZYL, '') AS `ZYL`, 
			IFNULL(T120.TUEREN, '') AS `TUEREN`, 
			IFNULL(T120.TANKINHALT, '') AS `TANKINHALT`, 
			IFNULL(T120.SPANNUNG, '') AS `SPANNUNG`, 
			IFNULL((CASE
					WHEN T120.ABS = 0 THEN 'NO'
					WHEN T120.ABS = 1 THEN 'YES'
					WHEN T120.ABS = 2 THEN 'OPTIONAL'
					WHEN T120.ABS = 9 THEN 'UNKNOWN'
					ELSE NULL
					END), '') AS `ABS`, 
			IFNULL((CASE
					WHEN T120.ASR = 0 THEN 'NO'
					WHEN T120.ASR = 1 THEN 'YES'
					WHEN T120.ASR = 2 THEN 'OPTIONAL'
					WHEN T120.ASR = 9 THEN 'UNKNOWN'
					ELSE NULL
					END), '') AS `ASR`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(80, T120.MOTART, @SPRACHNR), '') AS `MOTART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(97, T120.KRAFTSTOFFAUFBEREITUNGSPRINZIP, @SPRACHNR), '') AS `KRAFTSTOFFAUFBEREITUNGSPRINZIP`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(82, T120.ANTRART, @SPRACHNR), '') AS `ANTRART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(83, T120.BREMSART, @SPRACHNR), '') AS `BREMSART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(84, T120.BREMSSYS, @SPRACHNR), '') AS `BREMSSYS`, 
			IFNULL(T120.VENTILE_BRENNRAUM, '') AS `VENTILE_BRENNRAUM`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(182, T120.KRSTOFFART, @SPRACHNR), '') AS `KRSTOFFART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(89, T120.KATART, @SPRACHNR), '') AS `KATART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(85, T120.GETRART, @SPRACHNR), '') AS `GETRART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(86, T120.AUFBAUART, @SPRACHNR), '') AS `AUFBAUART`,
			IFNULL((SELECT 
						GROUP_CONCAT(DISTINCT T155.MCODE SEPARATOR ', ')
					FROM `125` AS T125
						JOIN `155` AS T155 ON T155.MOTNR = T125.MOTNR
					WHERE T125.KTYPNR = T120.KTYPNR), '') AS LISTENGINES
		FROM `120` AS T120		
			JOIN `110` AS T110 ON T110.KMODNR = T120.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR
		WHERE T120.KTYPNR = @KTYPNR;
		
		-- SHOW INFO TRUCK
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @NTYPNR = 8513; -- SELECTED TYPE "VOLVO FL II (FL 240-12) [200605 - ]"
		
		SELECT			
			T532.NTYPNR AS `NTYPNR`, 
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			GET_LBEZNR(T532.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE					
			T532.BJVON AS `BJVON`, 
			IFNULL(T532.BJBIS, 'to now') AS `BJBIS`, 			
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(67, T532.BAUART, @SPRACHNR), '') AS `BAUART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(80, T532.MOTART, @SPRACHNR), '') AS `MOTART`, 
			IFNULL(T532.KWVON, '') AS `KWVON`, 
			IFNULL(T532.KWBIS, '') AS `KWBIS`, 
			IFNULL(T532.PSVON, '') AS `PSVON`, 
			IFNULL(T532.PSBIS, '') AS `PSBIS`, 
			IFNULL(T532.CCMTECH, '') AS `CCMTECH`, 
			IFNULL(T532.TONNAGE, '') AS `TONNAGE`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(65, T532.ACHSCONFIG, @SPRACHNR), '') AS `ACHSCONFIG`,
			IFNULL((SELECT 
						GROUP_CONCAT(DISTINCT T155.MCODE SEPARATOR ', ')
					FROM `537` AS T537
						JOIN `155` AS T155 ON T155.MOTNR = T537.MOTNR
					WHERE T537.NTYPNR = T532.NTYPNR), '') AS LISTENGINES						
		FROM `532` AS T532		
			JOIN `110` AS T110 ON T110.KMODNR = T532.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR
		WHERE T532.NTYPNR = @NTYPNR;
		
		-- SHOW INFO AXLE
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ATYPNR = 1860; -- SELECTED AXLE "BPW H H16000 [198201-]"
		
		SELECT			
			T160.ATYPNR AS `ATYPNR`, 
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
			GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
			T160.BEZEICHNUNG AS TYPE,  -- NAME TYPE					
			T160.BJVON AS `BJVON`, 
			IFNULL(T160.BJBIS, 'to now') AS `BJBIS`, 	
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(68, T160.ACHSART, @SPRACHNR), '') AS `ACHSART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(95, T160.AUSFUHRUNG, @SPRACHNR), '') AS `AUSFUHRUNG`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(83, T160.BREMSAUSF, @SPRACHNR), '') AS `BREMSAUSF`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(214, T160.ACHSKORPER, @SPRACHNR), '') AS `ACHSKORPER`, 
			IFNULL(T160.ZULLASTVON, '') AS `ZULLASTVON`, 
			IFNULL(T160.ZULLASTBIS, '') AS `ZULLASTBIS`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(213, T160.RADBEFESTIGUNG, @SPRACHNR), '') AS `RADBEFESTIGUNG`, 
			IFNULL(T160.SPURWEITE, '') AS `SPURWEITE`, 
			IFNULL(T160.NABENSYSTEM, '') AS `NABENSYSTEM`, 
			IFNULL(T160.FAHRHOHE_VON, '') AS `FAHRHOHE_VON`, 
			IFNULL(T160.FAHRHOHE_BIS, '') AS `FAHRHOHE_BIS`			
		FROM `160` AS T160		
			JOIN `110` AS T110 ON T110.KMODNR = T160.KMODNR			
			JOIN `100` AS T100 ON T100.HERNR = T110.HERNR
		WHERE T160.ATYPNR = @ATYPNR;
		
---------------------------------	 
	 3.4. Searching by Ktype and get Ktype value regarding value KBA, TypeMine, LicensePlate [Swiss, Netherland, Swedish, Austrian] (in case available those tables in your data)
	 			
		-- SEARCHING BY KTYPE (TECDOC USE 3 DIFFERENT TYPE VALUES FOR INDENTIFICATION VEHICLE : KTYPNR for passanger, motorcycles and light commercial vehicles, NTYPNR for truck and commercial vehicles, ATYPNR for truck axle/semi-trailer)
		-- SEARCHING BY KTYPE IS SIMILAR 3.3-POINT "Show info about selected Passanger car| Truck | Axle"
		
		-- SEARCHING BY KBA
		SET @KBA1 = '0005';
		SET @KBA2 = '080';
		SET @REGNUM = CONCAT(@KBA1,@KBA2);
		
		SELECT
			T121.KTYPNR
		FROM `121` AS T121
		WHERE T121.KBANR = @REGNUM;
				
		-- SEARCHING BY TYPEMINE
		SET @REGNUM = 'SEARCHNUMBER';
		
		SELECT
			T123.KTYPNR
		FROM `123` AS T123
		WHERE T123.TYPMINE = @REGNUM;
		
		
		-- SEARCHING BY SWISS TYPE PLATE
		SET @REGNUM = 'SEARCHNUMBER';
		
		SELECT
			T126.KTYPNR
		FROM `126` AS T126
		WHERE T126.CHTYP = @REGNUM;
		
		-- SEARCHING NETHERLAND LICENSE PLATE
		SET @REGNUM = 'SEARCHNUMBER';
		
		SELECT
			T127.KTYPNR
		FROM `127` AS T127
		WHERE T127.NLTYP = @REGNUM;
		
		-- SEARCHING SWEDISH LICENSE PLATE
		SET @REGNUM = 'SEARCHNUMBER';
		
		SELECT
			T128.KTYPNR
		FROM `128` AS T128
		WHERE T128.STYP = @REGNUM;
		
		-- SEARCHING AUSTRIAN NATCODE
		SET @REGNUM = 'SEARCHNUMBER';
		
		SELECT
			T129.KTYPNR
		FROM `129` AS T129
		WHERE T129.NATCODE = @REGNUM;
		
	 
	 ---------------------------------
	 3.5. Seraching by code engine (list vehicles where use engine)
	 
		-- SEARCHING BY CODE ENGINE
		SET @MCODE = 'AGR';
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		
		SELECT DISTINCT
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER_ENGINE,
			T155.MOTNR,
			T155.MCODE,
			T125.KTYPNR,
			T537.NTYPNR
		FROM `155` AS T155
			JOIN `100` AS T100 ON T100.HERNR = T155.HERNR
			LEFT JOIN `125` AS T125 ON T125.MOTNR = T155.MOTNR
			LEFT JOIN `537` AS T537 ON T537.MOTNR = T155.MOTNR
		WHERE T155.MCODE = @MCODE;
		
			-- FOR EXAMPLE WE SELECTED MOTNR = 9364
		
	 ---------------------------------
	 3.6. Show info about engine
	 
		-- --------------
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @MOTNR = 9364; -- SELECTED MOTORNUMBER FOR FOUND MOTOR CODE "AGR"		
		
		SELECT			
			T155.MOTNR, 
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER_ENGINE,
			T155.MCODE,
			IFNULL(T155.BJVON, 'unknow') AS `BJVON`,
			IFNULL(T155.BJBIS, 'unknow') AS `BJBIS`,			
			IFNULL(T155.KWVON, '') AS `KWVON`, 
			IFNULL(T155.KWBIS, '') AS `KWBIS`, 
			IFNULL(T155.PSVON, '') AS `PSVON`, 
			IFNULL(T155.PSBIS, '') AS `PSBIS`, 
			IFNULL(T155.VENTILE, '') AS `VENTILE`, 
			IFNULL(T155.ZYL, '') AS `ZYL`, 
			IFNULL(T155.VERDICHTV, '') AS `VERDICHTV`, 
			IFNULL(T155.VERDICHTB, '') AS `VERDICHTB`, 
			IFNULL(T155.DREHMV, '') AS `DREHMV`, 
			IFNULL(T155.DREHMB, '') AS `DREHMB`, 
			IFNULL(T155.CCMSTEUERV, '') AS `CCMSTEUERV`, 
			IFNULL(T155.CCMSTEUERB, '') AS `CCMSTEUERB`, 
			IFNULL(T155.CCMTECHV, '') AS `CCMTECHV`, 
			IFNULL(T155.CCMTECHB, '') AS `CCMTECHB`, 
			IFNULL(T155.LITSTEUERV, '') AS `LITSTEUERV`, 
			IFNULL(T155.LITSTEUERB, '') AS `LITSTEUERB`, 
			IFNULL(T155.LITTECHV, '') AS `LITTECHV`, 
			IFNULL(T155.LITTECHB, '') AS `LITTECHB`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(98, T155.MOTVERW, @SPRACHNR), '') AS `MOTVERW`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(96, T155.MOTBAUFORM, @SPRACHNR), '') AS `MOTBAUFORM`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(88, T155.KRSTOFFART, @SPRACHNR), '') AS `KRSTOFFART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(97, T155.KRSTOFFAUF, @SPRACHNR), '') AS `KRSTOFFAUF`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(99, T155.MOTBEATM, @SPRACHNR), '') AS `MOTBEATM`, 
			IFNULL(T155.UMINKWV, '') AS `UMINKWV`, 
			IFNULL(T155.UMINKWB, '') AS `UMINKWB`, 
			IFNULL(T155.UMINDREHMV, '') AS `UMINDREHMV`, 
			IFNULL(T155.UMINDREHMB, '') AS `UMINDREHMB`, 
			IFNULL(T155.KURBEL, '') AS `KURBEL`, 
			IFNULL(T155.BOHRUNG, '') AS `BOHRUNG`, 
			IFNULL(T155.HUB, '') AS `HUB`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(80, T155.MOTORART, @SPRACHNR), '') AS `MOTORART`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(63, T155.ABGASNORM, @SPRACHNR), '') AS `ABGASNORM`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(79, T155.ZYLBAUFORM, @SPRACHNR), '') AS `ZYLBAUFORM`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(77, T155.MOTSTEUER, @SPRACHNR), '') AS `MOTSTEUER`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(78, T155.VENTILSTEUER, @SPRACHNR), '') AS `VENTILSTEUER`, 
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(76, T155.KUEHLART, @SPRACHNR), '') AS `KUEHLART`, 
			IFNULL(T155.VKBEZ, '') AS `VKBEZ`					
		FROM `155` AS T155		
			JOIN `100` AS T100 ON T100.HERNR = T155.HERNR
		WHERE T155.MOTNR = @MOTNR;
		
	 ---------------------------------
  4. Work with products
	 4.1. Show available suppliers and show available all brands (that use in reference table)
	 
		-- SELECTING ALL SUPPLIERS
		SET @PATHTOIMAGE = 'http://yourserver.com/img/';
		
		SELECT
			T001.DLNR,
			T001.KHERNR, -- IN CASE WHEN = 0 THEN THIS IS DVSE BRAND
			T001.MARKE,
			IFULL((SELECT 
						CONCAT(@PATHTOIMAGE, T001.DLNR, '/', T231.BILDNAME, '.', T014.EXTENSION)
					FROM `042` AS T042
						JOIN `231` AS T231 ON T231.BILDNR = T042.BILDNR AND T231.DOKUMENTENART = T042.DOKUMENTENART
						JOIN `014` AS T014 ON T014.DOKUMENTENART = T042.DOKUMENTENART
					WHERE T042.DLNR = T001.DLNR
					LIMIT 1), '') as LOGO
		FROM `001` AS T001
		WHERE 1
		ORDER BY MARKE;
		
		-- SELECTING ALL MANUFACTURERS AND SHOWING TYPE BRAND
		SELECT
			T100.HERNR,
			IFNULL(T001.DLNR, '') AS DLNR, -- in case availabe result value this mean that this supplier is providing data for Tecdoc for subscribed client data
			T100.HKZ,
			IFNULL(T001.MARKE, GET_LBEZNR(T100.LBEZNR, @SPRACHNR)) AS MARKE, 
			IF(T100.VGL = 1, IF(T001.DLNR IS NOT NULL, 'IS MANUFACTURER SPARE PARTS AND SUPPLIER THIS CATALOG', 'IS MANUFACTURER SPARE PARTS'), 'IS MANUFACTURER VEHCILES OR ENGINE OE AXLE') 			
		FROM `100` AS T100
			LEFT JOIN `001` AS T001 ON T001.KHERNR = T100.HERNR
		WHERE 1
		ORDER BY MARKE;
	 
	 ---------------------------------
	 4.2. Search by artnumber - checking name of brands that use this search number
	 
		-- 1-STEP : NEED CREATING FIXED TABLES FOR MAIN PRODUCT AND CROSSREFERENCE TABLE AND FIILING DATA FOR POSSIBILITY FAST SEARCHING BY ARTNUMBER
		-- CREATING TABLES NEED MAKE ONE TIME
		-- FILLING TABLES NEED MAKE FIST TIME WHEN ALL OTHER TABLES WAS FILLED AND EACH TIME WHEN IS UPDATED DATA IN TABLES '200' AND '203'
		
		-- MAIN TABLE
		CREATE TABLE `200_fixed` (
		  `ARTNR` varchar(22) NOT NULL DEFAULT '' COMMENT 'Article Number in the data supplier format',
		  `DLNR` smallint(4) NOT NULL COMMENT 'Data Supplier Number Constant (-> 040)',
		  `ARTNR_SHORT` varchar(22) NOT NULL DEFAULT '' COMMENT 'Article Number in the data supplier format - search short number',		 
		  PRIMARY KEY (`ARTNR_SHORT`,`DLNR`,`ARTNR`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Fixed Main Article Data Table - for fast searching';
		
		-- FILIING TABLE `200_fixed`
		INSERT IGNORE INTO `200_fixed` (`ARTNR_SHORT`,`DLNR`,`ARTNR`) SELECT CLEAN_NUMBER(ARTNR), DLNR, ARTNR FROM `200`;
		
		-- CROSS TABLE
		CREATE TABLE `203_fixed` (
		  `ARTNR` varchar(22) NOT NULL DEFAULT '' COMMENT 'Article Number in the data supplier format',
		  `DLNR` smallint(4) NOT NULL COMMENT 'Data Supplier Number Constant (-> 100)',		 
		  `KHERNR` mediumint(6) NOT NULL DEFAULT '0' COMMENT 'Vehicle Manufacturer (-> 100)',		
		  `REFNRSHORT` varchar(22) NOT NULL DEFAULT '' COMMENT 'OE number for this manufacturer',		
		  PRIMARY KEY (`REFNRSHORT`,`KHERNR`,`DLNR`,`ARTNR`),		  
		  KEY `ARTNR_DLNR` (`ARTNR`, `DLNR`),
		  KEY `KHERNR` (`KHERNR`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Fixed Reference numbers for articles by vehicle manufacturers - for fast searching';
		
		-- FILIING TABLE `203_fixed`
		INSERT IGNORE INTO `203_fixed` (`REFNRSHORT`,`KHERNR`,`DLNR`,`ARTNR`) SELECT CLEAN_NUMBER(REFNR), KHERNR, DLNR, ARTNR FROM `203`;
		
		-- SEARCHING BY ARTNUMBER - CHECKING BRANDS THAT USE THIS ARTNUMBER
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNUMBER = '02354';		
		
		SELECT
			T.ARTNR_SHORT,
			T.ARTNR_FULL,
			T.MARKE,
			T.DLNR,
			T.HERNR,
			T.MANUFACTURER_SHORTCODE,
			T.NOTE
		FROM (SELECT 
				P.ARTNR_SHORT AS ARTNR_SHORT,
				P.ARTNR AS ARTNR_FULL,
				T001.MARKE AS MARKE,
				T001.DLNR AS DLNR,
				T001.KHERNR AS HERNR,
				T100.HKZ AS MANUFACTURER_SHORTCODE,
				'FROM MAIN TABLE' as NOTE
			  FROM `200_fixed` AS P
				JOIN `001` AS T001 ON T001.DLNR = P.DLNR
				JOIN `100` AS T100 ON T100.HERNR = T001.KHERNR
			  WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNUMBER)
			  
				UNION
				
			  SELECT 
				CR.REFNRSHORT AS ARTNR_SHORT,
				CR.REFNRSHORT AS ARTNR_FULL,
				GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MARKE,
				'' AS DLNR,
				T100.HERNR AS HERNR,
				T100.HKZ AS MANUFACTURER_SHORTCODE,
				'FROM CROSSREFERENCE TABLE' as NOTE
			  FROM `203_fixed` AS CR
				JOIN `100` AS T100 ON T100.HERNR = CR.KHERNR
				LEFT JOIN `001` AS T001 ON T001.KHERNR = CR.KHERNR
			  WHERE	CR.REFNRSHORT = CLEAN_NUMBER(@ARTNUMBER)
				AND (T001.DLNR IS NULL OR NOT EXISTS(SELECT * FROM `200_fixed` AS P WHERE P.ARTNR_SHORT = CR.REFNRSHORT AND P.DLNR = T001.DLNR))
			 ) AS T
			 
			-- FOR EXAMPLE WE SELECTED PRODUCT "FEBI BILSTEIN 02354" WHERE DLNR = 101
			
		-- SEARCHING BY ARTNUMBER - CHECKING FOR WHICH PRODUCTS IN CROSSREF TABLE IS BINDED THIS SEARCH ARTNUMBER (ACCORDING SUPPLIER DATA)
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNUMBER = '02354';	
		
		SELECT DISTINCT		
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS SEARCH_BRAND,
			CR.REFNRSHORT AS SEARCH_ARTNUMBER,				
			T001.MARKE AS BINDEDTO_BRAND, -- PRODUCT FROM MAIN TABLE
			T200.ARTNR AS BINDEDTO_ARTNR, -- PRODUCT FROM MAIN TABLE			
			CONCAT(IFNULL((
				SELECT
					GROUP_CONCAT(DISTINCT GET_BEZNR(T320.BEZNR, @SPRACHNR))
				FROM `211` AS T211
					JOIN `320` AS T320 ON T320.GENARTNR = T211.GENARTNR
				WHERE T211.ARTNR = T200.ARTNR AND T211.DLNR = T200.DLNR			
				), ''), IFNULL(CONCAT(' ', GET_BEZNR(T200.BEZNR, @SPRACHNR)), '')) AS NAMEPRODUCT
		FROM `203_fixed` AS CR
			JOIN `200` AS T200 ON T200.ARTNR = CR.ARTNR AND T200.DLNR = CR.DLNR			
			JOIN `100` AS T100 ON T100.HERNR = CR.KHERNR
			JOIN `001` AS T001 ON T001.DLNR = T200.DLNR
		WHERE CR.REFNRSHORT = CLEAN_NUMBER(@ARTNUMBER)
		ORDER BY SEARCH_BRAND, SEARCH_ARTNUMBER, BINDEDTO_BRAND;
		
	 ---------------------------------
	 4.3. Main info of product
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG THAT PLACED IN MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '02354';
		SET @DLNR = 101;
		
		SELECT
			-- PRODUCT TABLE
			T200.ARTNR AS `ARTNR`, 
			T200.DLNR AS `DLNR`, 
			P.ARTNR_SHORT AS `ARTNR_SHORT`, 			
			IFNULL(GET_BEZNR(T200.BEZNR, @SPRACHNR), '') AS `PREFIXFOR_NAMEPRODUCT`, 
			(CASE
				WHEN T200.KZSB = 1 THEN 'SELF-SERVICE PACKING'				
				ELSE ''
			 END) AS `KZSB`, 
			(CASE
				WHEN T200.KZMAT = 1 THEN 'MANDATORY MATERIAL CERTIFICATION'				
				ELSE ''
			 END) AS `KZMAT`, 
			(CASE
				WHEN T200.KZAT = 1 THEN 'REMANUFACTURED PART'				
				ELSE ''
			 END) AS `KZAT`, 
			(CASE
				WHEN T200.KZZUB = 1 THEN 'ACCESSORY'				
				ELSE ''
			 END) AS `KZZUB`, 
			IFNULL(T200.LOSGR1, '') AS `LOSGR1`, 
			IFNULL(T200.LOSGR2, '') AS `LOSGR2`,
			-- TRADE GROUPS
			T320.GENARTNR,
			IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), '') AS `NAMEPRODUCT`,
			IFNULL(GET_BEZNR(T323.BEZNR, @SPRACHNR), '') AS STANDARD_GROUP,
			IFNULL(GET_BEZNR(T324.BEZNR, @SPRACHNR), '') AS ASSEMBLY_GROUP,
			IFNULL(GET_BEZNR(T325.BEZNR, @SPRACHNR), '') AS PURPOSE_GROUP,			
			-- ADDITIONAL DATA
			IFNULL((SELECT
						GROUP_CONCAT(DISTINCT CONCAT('[VPE:',IFNULL(T212.VPE, ''),',MENGEPROVPE:',IFNULL(T212.MENGEPROVPE, ''),',ARTSTAT:',IFNULL(GET_BEZNR_FOR_KEY_TABLE(73, T212.ARTSTAT, @SPRACHNR), ''),',STATUSDAT:',IFNULL(T212.STATUSDAT, ''),']'))
					FROM `212` AS T212
					WHERE T212.ARTNR = T200.ARTNR AND T212.DLNR = T200.DLNR), '') AS PACKINFO, -- 212
			IFNULL((SELECT
						GROUP_CONCAT(DISTINCT T209.EANNR)
					FROM `209` AS T209
					WHERE T209.ARTNR = T200.ARTNR AND T209.DLNR = T200.DLNR), '') AS EAN, -- 209
			IFNULL((SELECT
						GROUP_CONCAT(DISTINCT T207.GEBRNR)
					FROM `207` AS T207
					WHERE T207.ARTNR = T200.ARTNR AND T207.DLNR = T200.DLNR
					ORDER BY T207.SORTNR), '') AS LIST_USERNUMBERS, -- 207
			IFNULL((SELECT
						GROUP_CONCAT(DISTINCT T204.ERSATZNR)
					FROM `204` AS T204
					WHERE T204.ARTNR = T200.ARTNR AND T204.DLNR = T200.DLNR
					ORDER BY T204.SORT), '') AS LIST_REPLACEDNUMBERS -- 204			
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `211` AS T211 ON T211.ARTNR = T200.ARTNR AND T211.DLNR = T200.DLNR
			JOIN `320` AS T320 ON T320.GENARTNR = T211.GENARTNR
			LEFT JOIN `323` AS T323 ON T323.NARTNR = T320.NARTNR
			LEFT JOIN `324` AS T324 ON T324.BGNR = T320.BGNR
			LEFT JOIN `325` AS T325 ON T325.VERWNR = T320.VERWNR
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR;
	 
	 ---------------------------------
	 4.4. Cryteries of product
		
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '02354';
		SET @DLNR = 101;
		
		SELECT DISTINCT
			IFNULL(GET_BEZNR(T050.BEZNR, @SPRACHNR), '') AS NAME_CRY,						
			IF(T050.TYP <> 'K', 
				T210.KRITWERT, 
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(T050.TABNR, T210.KRITWERT, @SPRACHNR), '')
				) AS VALUE_CRY
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `210` AS T210 ON T210.ARTNR = T200.ARTNR AND T210.DLNR = T200.DLNR
			JOIN `050` AS T050 ON T050.DLNR IN (T200.DLNR, 9999) AND T050.KRITNR = T210.KRITNR
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		ORDER BY T210.SORTNR;
	 
	 ---------------------------------
	 4.5. Additional info of product
	 		
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '02354';
		SET @DLNR = 101;
		
		SELECT DISTINCT
			IFNULL(GET_BEZNR_FOR_KEY_TABLE(72, T206.INFART, @SPRACHNR), '') AS `INFART`,
			T035.TEXT AS ADDITIONAL_TEXT
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `206` AS T206 ON T206.ARTNR = T200.ARTNR AND T206.DLNR = T200.DLNR
			JOIN `035` AS T035 ON T035.DLNR = T200.DLNR AND T035.TBSNR = T206.TBSNR AND T035.SPRACHNR = @SPRACHNR
			
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		HAVING ADDITIONAL_TEXT IS NOT NULL
		ORDER BY T206.SORTNR;
		
	 ---------------------------------
	 4.6. Cross reference for product (own info from supplier)
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '02354';
		SET @DLNR = 101;
		
		SELECT DISTINCT
			GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS CROSS_BRAND,
			T203.REFNR AS CROSS_ARTNR,
			IF(T100.VGL = 1, 'AFTERMARKET RPODUCT', 'OE PRODUCT') AS NOTE
		FROM `200_fixed` AS P
			JOIN `203` AS T203 ON T203.ARTNR = P.ARTNR AND T203.DLNR = P.DLNR
			JOIN `100` AS T100 ON T100.HERNR = T203.KHERNR
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		ORDER BY CROSS_BRAND;
			
	 ---------------------------------
	 4.7. Cross reference for product (advanced view - searching by own oe-numbers and searching other products where use search product)
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '02354';
		SET @DLNR = 101;
		
		SELECT 
			T.CROSS_BRAND,
			T.CROSS_ARTNR,
			T.NOTE
		FROM (
			-- SHOW STANDARD DATA SUPPLIER
			SELECT 
				GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS CROSS_BRAND,
				IFNULL(P2.ARTNR, T203.REFNR) AS CROSS_ARTNR,
				IF(T100.VGL = 1, 'AFTERMARKET RPODUCT', 'OE PRODUCT') AS NOTE
			FROM `200_fixed` AS P
				JOIN `203` AS T203 ON T203.ARTNR = P.ARTNR AND T203.DLNR = P.DLNR
				JOIN `100` AS T100 ON T100.HERNR = T203.KHERNR
				LEFT JOIN `001` AS T001 ON T001.KHERNR = T203.KHERNR
				LEFT JOIN `200_fixed` AS P2 ON P2.ARTNR_SHORT = CLEAN_NUMBER(T203.REFNR) AND P2.DLNR = T001.DLNR
			WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
				AND P.DLNR = @DLNR
			
				UNION
				
			-- SEARCHING PRODUCTS THAT USE SERACH PRODUCT IN OWN CROSSREF DATA
			SELECT
				T001_1.MARKE AS CROSS_BRAND,
				CR.ARTNR AS CROSS_ARTNR,
				'AFTERMARKET RPODUCT' AS NOTE
			FROM `203_fixed` AS CR
				JOIN `100` AS T100 ON T100.HERNR = CR.KHERNR
				JOIN `001` AS T001 ON T001.KHERNR = T100.HERNR
				JOIN `001` AS T001_1 ON T001_1.DLNR = CR.DLNR
			WHERE CR.REFNRSHORT = CLEAN_NUMBER(@ARTNR)
				AND T001.DLNR = @DLNR			
				
				UNION
				
			-- SEARCHING MAIN PRODUCTS THAT ARE ANALOGS REGARDING OWN OE-PRODUCTS
			SELECT 
				T001_1.MARKE AS CROSS_BRAND,
				CR.ARTNR AS CROSS_ARTNR,				
				'AFTERMARKET RPODUCT' AS NOTE
			FROM `200_fixed` AS P
				JOIN `203` AS T203 ON T203.ARTNR = P.ARTNR AND T203.DLNR = P.DLNR
				JOIN `100` AS T100 ON T100.HERNR = T203.KHERNR AND T100.VGL = 0				
				JOIN `203_fixed` AS CR ON CR.REFNRSHORT = CLEAN_NUMBER(T203.REFNR) AND CR.KHERNR = T203.KHERNR								
				JOIN `001` AS T001_1 ON T001_1.DLNR = CR.DLNR
			WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
				AND P.DLNR = @DLNR							
				
			/*	UNION
				
			-- SEARCHING ALL CORSSREF PRODUCTS FOR PRODUCTS THAT ARE ANALOGS REGARDING OWN OE-PRODUCTS !!!! THIS POINT CAN HAVE AFFECT ON RIGHT LIST CROSSREFERENCE, YOU CAN DISABLE THIS POINT
			SELECT 
				GET_LBEZNR(T100_1.LBEZNR, @SPRACHNR) AS CROSS_BRAND,
				T203_2.REFNR AS CROSS_ARTNR,				
				IF(T100_1.VGL = 1, 'AFTERMARKET RPODUCT', 'OE PRODUCT') AS NOTE
			FROM `200_fixed` AS P
				JOIN `203` AS T203 ON T203.ARTNR = P.ARTNR AND T203.DLNR = P.DLNR
				JOIN `100` AS T100 ON T100.HERNR = T203.KHERNR AND T100.VGL = 0				
				JOIN `203_fixed` AS CR ON CR.REFNRSHORT = CLEAN_NUMBER(T203.REFNR) AND CR.KHERNR = T203.KHERNR				
				JOIN `203` AS T203_2 ON T203_2.ARTNR = CR.ARTNR AND T203_2.DLNR = CR.DLNR
				JOIN `100` AS T100_1 ON T100_1.HERNR = T203_2.KHERNR
			WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
				AND P.DLNR = @DLNR	*/							
			) AS T
		ORDER BY CROSS_BRAND, CROSS_ARTNR; 
		
	 ---------------------------------
	 4.8. Applicability to vehicles
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = 'GDB1220';
		SET @DLNR = 161;
		
		SELECT
			T.KTYPE,
			T.VKNZIELART,
			T.MANUFACTURER,
			T.MODEL,
			T.TYPE,
			T.BJVON,
			T.BJBIS,
			T.KW,
			T.PS,
			T.CCM,
			T.BODYTYPE,
			T.ENGINETYPE,
			T.LISTENGINES
		FROM (
			-- PASSANGER
			SELECT
				T120.KTYPNR AS `KTYPE`, 
				T400.VKNZIELART AS VKNZIELART, -- 2-PASSANGER, 16-TRUCK
				GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
				GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
				GET_LBEZNR(T120.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE					
				T120.BJVON AS `BJVON`, 
				IFNULL(T120.BJBIS, 'to now') AS `BJBIS`, 
				IFNULL(T120.KW, '') AS `KW`, 
				IFNULL(T120.PS, '') AS `PS`, 
				IFNULL(T120.CCMTECH, '') AS `CCM`, 
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(86, T120.AUFBAUART, @SPRACHNR), '') AS `BODYTYPE`,
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(80, T120.MOTART, @SPRACHNR), '') AS `ENGINETYPE`, 
				IFNULL((SELECT 
						GROUP_CONCAT(DISTINCT T155.MCODE SEPARATOR ', ')
					FROM `125` AS T125
						JOIN `155` AS T155 ON T155.MOTNR = T125.MOTNR
					WHERE T125.KTYPNR = T120.KTYPNR), '') AS LISTENGINES
			FROM `200_fixed` AS P
				JOIN `400` AS T400 ON T400.ARTNR = P.ARTNR AND T400.DLNR = P.DLNR AND T400.VKNZIELART = 2
				JOIN `120` AS T120 ON T120.KTYPNR = T400.VKNZIELNR
				JOIN `110` AS T110 ON T110.KMODNR = T120.KMODNR			
				JOIN `100` AS T100 ON T100.HERNR = T110.HERNR
			WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
				AND P.DLNR = @DLNR	
			
				UNION
				
			-- TRUCK
			SELECT
				T532.NTYPNR AS `KTYPE`, 
				T400.VKNZIELART AS VKNZIELART, -- 2-PASSANGER, 16-TRUCK
				GET_LBEZNR(T100.LBEZNR, @SPRACHNR) AS MANUFACTURER,  -- NAME MANUFACTURER
				GET_LBEZNR(T110.LBEZNR, @SPRACHNR) AS MODEL,  -- NAME MODEL
				GET_LBEZNR(T532.LBEZNR, @SPRACHNR) AS TYPE,  -- NAME TYPE					
				T532.BJVON AS `BJVON`, 
				IFNULL(T532.BJBIS, 'to now') AS `BJBIS`, 		
				IFNULL(T532.KWVON, '') AS `KW`, 
				IFNULL(T532.PSVON, '') AS `PS`, 
				IFNULL(T532.CCMTECH, '') AS `CCM`, 
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(67, T532.BAUART, @SPRACHNR), '') AS `BODYTYPE`,
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(80, T532.MOTART, @SPRACHNR), '') AS `ENGINETYPE`, 
				IFNULL((SELECT 
						GROUP_CONCAT(DISTINCT T155.MCODE SEPARATOR ', ')
					FROM `537` AS T537
						JOIN `155` AS T155 ON T155.MOTNR = T537.MOTNR
					WHERE T537.NTYPNR = T532.NTYPNR), '') AS LISTENGINES
			FROM `200_fixed` AS P
				JOIN `400` AS T400 ON T400.ARTNR = P.ARTNR AND T400.DLNR = P.DLNR AND T400.VKNZIELART = 16
				JOIN `532` AS T532 ON T532.NTYPNR = T400.VKNZIELNR
				JOIN `110` AS T110 ON T110.KMODNR = T532.KMODNR			
				JOIN `100` AS T100 ON T100.HERNR = T110.HERNR
			WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
				AND P.DLNR = @DLNR	
			) AS T
		ORDER BY MANUFACTURER, MODEL, TYPE; 
		
			-- FOR SAMPLE WE SELECTED VEHICLE "PASSANGER" (VKNZIELART = 2) WITH KTYPE = 8729 "MERCEDES-BENZ	SPRINTER 2-t Platform/Chassis (901, 902)	208 D	199501	200004	58	79	2299	Platform/Chassis	Diesel	OM 601.943"
						
	 ---------------------------------
	 4.9. Terms of use product for selected vehicle	 
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		-- ALSO THIS QUERY CAN USE AS SUBVALUE/SUBQUERY TO QUERY 4.8. FOR POSSIBILITY IN ONE RESULT SEE ALSO TERMS USE PRODUCT FOR CARS
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = 'GDB1220';
		SET @DLNR = 161;
		SET @KTYPE = 8729; -- SELECTED VEHICLE "MERCEDES-BENZ	SPRINTER 2-t Platform/Chassis (901, 902)	208 D	199501	200004	58	79	2299	Platform/Chassis	Diesel	OM 601.943"
		SET @VKNZIELART = 2;
		
		SELECT DISTINCT
			IFNULL(GET_BEZNR(T050.BEZNR, @SPRACHNR), '') AS NAME_CRY,						
			IF(T050.TYP <> 'K', 
				T410.KRITWERT, 
				IFNULL(GET_BEZNR_FOR_KEY_TABLE(T050.TABNR, T410.KRITWERT, @SPRACHNR), '')
				) AS VALUE_CRY
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `410` AS T410 ON T410.ARTNR = T200.ARTNR AND T410.DLNR = T200.DLNR
			JOIN `050` AS T050 ON T050.DLNR IN (T200.DLNR, 9999) AND T050.KRITNR = T410.KRITNR
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
			AND T410.VKNZIELART = @VKNZIELART
			AND T410.VKNZIELNR = @KTYPE
		ORDER BY T410.SORTNR;
		
	 ---------------------------------
	 4.10. Images and other links for product
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		-- IMAGES AND PDF-FILES FOR EACH BRAND MUST WILL PLACED IN SEPARATE FOLDERS, WHERE NAME FOLDER = DLNR VALUE
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = 'GDB1220';
		SET @DLNR = 161;
		SET @PATHTOIMAGE = 'http://yourserver.com/img/';
		SET @PATHTOPDF = 'http://yourserver.com/pdf/';
		
		SELECT
			IFNULL(GET_BEZNR(T014.BEZNR, @SPRACHNR), '') AS INFO,
			GET_BEZNR_FOR_KEY_TABLE(143, T231.BILDTYPE, @SPRACHNR) AS `BILDTYPE`, 
			GET_BEZNR_FOR_KEY_TABLE(141, T231.BEZNORM, @SPRACHNR) AS `Standardised Graphic Header`, 
			IFNULL(T231.BREIT, '') AS `Graphic width`, 
			IFNULL(T231.HOCH, '') AS `Graphic height`, 
			IFNULL(T231.FARBEN, '') AS `Colour Quantity`, 
			IFNULL(GET_BEZNR(T231.BEZNR, @SPRACHNR), '') AS `Description`,
			CONCAT(
				(CASE
					WHEN IFNULL(T014.EXTENSION, '') = 'PDF' THEN @PATHTOPDF 
					WHEN IFNULL(T014.EXTENSION, '') IN ('BMP','JPG','PNG','GIF') THEN @PATHTOIMAGE 
					ELSE ''
				END), -- URL SERVER WHERE PLACED IMAGES OR PDF
				(CASE					
					WHEN IFNULL(T014.EXTENSION, '') IN ('PDF','BMP','JPG','PNG','GIF') THEN CONCAT(T200.DLNR, '/')
					ELSE ''
				END), -- FOLDER
				(CASE					
					WHEN IFNULL(T014.EXTENSION, '') IN ('PDF','BMP','JPG','PNG','GIF') THEN T231.BILDNAME
					ELSE ''
				END), -- NAME FILE
				(CASE					
					WHEN IFNULL(T014.EXTENSION, '') IN ('PDF','BMP','JPG','PNG','GIF') THEN CONCAT('.', T014.EXTENSION)
					ELSE T231.URL
				END) -- EXTENSION
				) AS PATH
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `232` AS T232 ON T232.ARTNR = T200.ARTNR AND T232.DLNR = T200.DLNR
			JOIN `231` AS T231 ON T231.BILDNR = T232.BILDNR AND T231.SPRACHNR IN (@SPRACHNR, 255) AND T231.DOKUMENTENART = T232.DOKUMENTENART
			LEFT JOIN `014` AS T014 ON T014.DOKUMENTENART = T232.DOKUMENTENART
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		ORDER BY T232.SORTNR;
						
	 ---------------------------------
	 4.11. Specification kit products or searching entry into kits
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT				
		
		-- SHOW SPECIFICATION KIT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '0 001 106 011';
		SET @DLNR = 30;
		
		SELECT DISTINCT
			T001.MARKE AS MARKE, 
			T205.PARTNR AS PARTNR,
			T205.MENGE AS MENGE,
			IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), '') AS NAME
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `205` AS T205 ON T205.ARTNR = T200.ARTNR AND T205.DLNR = T200.DLNR
			LEFT JOIN `320` AS T320 ON T320.GENARTNR = T205.PARTGENARTNR
			LEFT JOIN `001` AS T001 ON T001.DLNR = T200.DLNR
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		ORDER BY T205.LFDNR;
		
		-- SHOW KITS WHERE USE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = 'HU 719/7X';
		SET @DLNR = 4;
		
		SELECT DISTINCT
			IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), '') AS NAME_KIT,
			T001.MARKE AS MARKE_KIT, 
			T205.ARTNR AS PARTNR_KIT,
			T205.MENGE AS MENGE_IN_KIT			
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR
			JOIN `205` AS T205 ON T205.PARTNR = T200.ARTNR AND T205.DLNR = T200.DLNR
			JOIN `200` AS T200_2 ON T200_2.ARTNR = T205.ARTNR AND T200_2.DLNR = T205.DLNR
			LEFT JOIN `001` AS T001 ON T001.DLNR = T200_2.DLNR 
			JOIN `211` AS T211 ON T211.ARTNR = T200_2.ARTNR AND T211.DLNR = T200_2.DLNR			
			LEFT JOIN `320` AS T320 ON T320.GENARTNR = T211.GENARTNR						
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR;
	 
	 ---------------------------------
	 4.12. Accessories that need use for product (list products that not included in main product, but products that need or preferably for use parallel)
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @ARTNR = '01001';
		SET @DLNR = 101;
		
		SELECT DISTINCT
			IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), '') AS NAME_ACCESSORY,
			T001.MARKE AS MARKE_ACCESSORY, 
			T222.ZARTNR AS PARTNR_ACCESSORY,
			T222.MENGE AS MENGE__ACCESSORY,
			IFNULL(GET_BEZNR(T222.BEZNR, @SPRACHNR), '') AS ADDITINAL_DESCRIPTION,
			(CASE
				WHEN T222.VKN_ART = 1 THEN CONCAT('ACCESSORY HAVE SPECIFIC USE FOR [MANUFACTURER] WHERE HerNr = [',IFNULL(T222.VKN_VALUE, ''),']')				
				WHEN T222.VKN_ART = 2 THEN CONCAT('ACCESSORY HAVE SPECIFIC USE FOR [MODEL VEHICLE] WHERE KModNR = [',IFNULL(T222.VKN_VALUE, ''),']')				
				WHEN T222.VKN_ART = 3 THEN CONCAT('ACCESSORY HAVE SPECIFIC USE FOR [PASSANGER VEHICLE] WHERE KType Nr = [',IFNULL(T222.VKN_VALUE, ''),']')				
				WHEN T222.VKN_ART = 4 THEN CONCAT('ACCESSORY HAVE SPECIFIC USE FOR [TRUCK VEHICLE] WHERE NType Nr = [',IFNULL(T222.VKN_VALUE, ''),']')				
				WHEN T222.VKN_ART = 5 THEN CONCAT('ACCESSORY HAVE SPECIFIC USE FOR [ENGINE] WHERE MotNr = [',IFNULL(T222.VKN_VALUE, ''),']')												
				ELSE ''
			END) AS NOTE
		FROM `200_fixed` AS P		
			JOIN `200` AS T200 ON T200.ARTNR = P.ARTNR AND T200.DLNR = P.DLNR			
			JOIN `222` AS T222 ON T222.ARTNR = T200.ARTNR AND T222.DLNR = T200.DLNR			
			JOIN `200` AS T200_2 ON T200_2.ARTNR = T222.ZARTNR AND T200_2.DLNR = T222.DLNR AND T200_2.KZZUB = 1		
			LEFT JOIN `001` AS T001 ON T001.DLNR = T200_2.DLNR 			
			JOIN `211` AS T211 ON T211.ARTNR = T200_2.ARTNR AND T211.DLNR = T200_2.DLNR			
			LEFT JOIN `320` AS T320 ON T320.GENARTNR = T211.GENARTNR						
		WHERE P.ARTNR_SHORT = CLEAN_NUMBER(@ARTNR)
			AND P.DLNR = @DLNR
		ORDER BY T222.SORTNR; 
				
		
	 ---------------------------------
  5. Creating catalog
	 5.1. List type of vehicles where use product
	 
		-- INFO ABOUT PRODUCT ARE POSSIBLE SHOW ONLY FOR PRODUCTS FROM MAIN TABLE `200`
		-- ELSE NEED SEARCH ANALOG FROM MAIN TABLE AND THEN CAN SUBSTITUTE NECESSARY INFO FOR CROSSREFERENCE PRODUCT
		
		-- SEE QUERY 4.8.
		
	 ---------------------------------
	 5.2. List products that use for selected vehicle	
	 
		-- -----------
		-- ALSO FOR THIS QUERY CAN USE AS SUBVALUE/SUBQUERY VALUES FROM QUERY 4.9. FOR POSSIBILITY IN ONE RESULT SEE ALSO TERMS USE PRODUCTS FOR CAR
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPE=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		SET @TYPECAR = 2; -- MARK THAT THIS IS PASSANGER CAR, 16 - IS TRUCK
		
		SELECT DISTINCT
			T001.MARKE AS MARKE,
			T200.ARTNR AS ARTNR,
			CONCAT(IFNULL((
				SELECT
					GROUP_CONCAT(DISTINCT GET_BEZNR(T320.BEZNR, @SPRACHNR))
				FROM `211` AS T211
					JOIN `320` AS T320 ON T320.GENARTNR = T211.GENARTNR
				WHERE T211.ARTNR = T200.ARTNR AND T211.DLNR = T200.DLNR			
				), ''), IFNULL(CONCAT(' ', GET_BEZNR(T200.BEZNR, @SPRACHNR)), '')) AS NAMEPRODUCT
		FROM `400` AS T400
			JOIN `200` AS T200 ON T200.ARTNR = T400.ARTNR AND T200.DLNR = T400.DLNR						
			JOIN `001` AS T001 ON T001.DLNR = T200.DLNR
		WHERE T400.VKNZIELART = @TYPECAR
			AND T400.VKNZIELNR = @KTYPE
		ORDER BY NAMEPRODUCT, MARKE;		
		
	 ---------------------------------
	 5.3. Generate tree categories for selected vehicle
	 
		-- SHOWING TREE CATEGORIES
		-- TREE CATEGORIES CAN WILL SEVERAL TYPES (WHERE CAN USE SOME SPECIFIC CATEGORIES), FOR :
			- PC (PASSANGER CARS) [TREETYPNR = 1]
			- CV (TRUCK, COMMERCIAL VEHICLES) [TREETYPNR = 2]
			- ENGINES [TREETYPNR = 3]
			- Axle [TREETYPNR = 4]
			- WORKSHOP SUPPLIES/UNIVERSAL PARTS [TREETYPNR = 7]
		
		-- SAMPLE TREE CATEGORIES FOR PASSANGER CARS
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPE=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		SET @VKNZIELART = 2; -- MARK THAT THIS IS PASSANGER CAR, 16 - IS TRUCK
		SET @TREETYPNR = 1; -- FOR PASSANGER CARS
			
		SELECT DISTINCT	
		   T301.STUFE,  -- ACTIVE LEVES
		   ELT(T301.STUFE, GET_BEZNR(T301.BEZNR, @SPRACHNR), GET_BEZNR(T301_2.BEZNR, @SPRACHNR), GET_BEZNR(T301_3.BEZNR, @SPRACHNR), GET_BEZNR(T301_4.BEZNR, @SPRACHNR), GET_BEZNR(T301_5.BEZNR, @SPRACHNR)) AS STR_TEXT1,
		   ELT(T301.STUFE, T301.NODE_ID, T301_2.NODE_ID, T301_3.NODE_ID, T301_4.NODE_ID, T301_5.NODE_ID) AS NODE_ID1,
		   ELT(T301.STUFE-1, GET_BEZNR(T301.BEZNR, @SPRACHNR), GET_BEZNR(T301_2.BEZNR, @SPRACHNR), GET_BEZNR(T301_3.BEZNR, @SPRACHNR), GET_BEZNR(T301_4.BEZNR, @SPRACHNR), GET_BEZNR(T301_5.BEZNR, @SPRACHNR)) AS STR_TEXT2,
		   ELT(T301.STUFE-1, T301.NODE_ID, T301_2.NODE_ID, T301_3.NODE_ID, T301_4.NODE_ID, T301_5.NODE_ID) AS NODE_ID2,
		   ELT(T301.STUFE-2, GET_BEZNR(T301.BEZNR, @SPRACHNR), GET_BEZNR(T301_2.BEZNR, @SPRACHNR), GET_BEZNR(T301_3.BEZNR, @SPRACHNR), GET_BEZNR(T301_4.BEZNR, @SPRACHNR), GET_BEZNR(T301_5.BEZNR, @SPRACHNR)) AS STR_TEXT3,
		   ELT(T301.STUFE-2, T301.NODE_ID, T301_2.NODE_ID, T301_3.NODE_ID, T301_4.NODE_ID, T301_5.NODE_ID) AS NODE_ID3,
		   ELT(T301.STUFE-3, GET_BEZNR(T301.BEZNR, @SPRACHNR), GET_BEZNR(T301_2.BEZNR, @SPRACHNR), GET_BEZNR(T301_3.BEZNR, @SPRACHNR), GET_BEZNR(T301_4.BEZNR, @SPRACHNR), GET_BEZNR(T301_5.BEZNR, @SPRACHNR)) AS STR_TEXT4,
		   ELT(T301.STUFE-3, T301.NODE_ID, T301_2.NODE_ID, T301_3.NODE_ID, T301_4.NODE_ID, T301_5.NODE_ID) AS NODE_ID4,
		   ELT(T301.STUFE-4, GET_BEZNR(T301.BEZNR, @SPRACHNR), GET_BEZNR(T301_2.BEZNR, @SPRACHNR), GET_BEZNR(T301_3.BEZNR, @SPRACHNR), GET_BEZNR(T301_4.BEZNR, @SPRACHNR), GET_BEZNR(T301_5.BEZNR, @SPRACHNR)) AS STR_TEXT5,
		   ELT(T301.STUFE-4, T301.NODE_ID, T301_2.NODE_ID, T301_3.NODE_ID, T301_4.NODE_ID, T301_5.NODE_ID) AS NODE_ID5		
		FROM `301` AS T301
			JOIN `302` AS T302 ON T302.NODE_ID = T301.NODE_ID			
			JOIN `400` AS T400 ON T302.GENARTNR = T400.GENARTNR	
			LEFT JOIN `301` AS T301_2 ON T301_2.NODE_ID = T301.NODE_PARENT_ID
			LEFT JOIN `301` AS T301_3 ON T301_3.NODE_ID = T301_2.NODE_PARENT_ID
			LEFT JOIN `301` AS T301_4 ON T301_4.NODE_ID = T301_3.NODE_PARENT_ID
			LEFT JOIN `301` AS T301_5 ON T301_5.NODE_ID = T301_4.NODE_PARENT_ID			
		WHERE T301.TREETYPNR = @TREETYPNR			
			AND T400.VKNZIELART = @VKNZIELART
			AND T400.VKNZIELNR = @KTYPE
		ORDER BY STR_TEXT1, STR_TEXT2, STR_TEXT3, STR_TEXT4, STR_TEXT5;
		
			-- FOR EXAMPLE FOR THIS CAR IS INTERESTED PRODUCT [LEVEL = 2] => "Clutch/ Parts [NODE_ID = 100050]" => "Clutch Disc [NODE_ID = 100053]" WHERE VALUE NECESSARY NODE_ID = 100053
		
	 ---------------------------------
	 5.4. List products according selected category in tree categories for selected vehicle
	 
		-- SHOWING LIST PRODUCTS ACCORDING NECESSARY TRADE GROUP IN TREE CATEGORIES THAT USE FOR NECESSARY CAR	
		-- ALSO FOR THIS QUERY CAN USE AS SUBVALUE/SUBQUERY VALUES FROM QUERY 4.9. FOR POSSIBILITY IN ONE RESULT SEE ALSO TERMS USE PRODUCTS FOR CAR
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPE=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		SET @VKNZIELART = 2; -- MARK THAT THIS IS PASSANGER CAR, 16 - IS TRUCK
		SET @TREETYPNR = 1; -- FOR PASSANGER CARS
		SET @NODE_ID = 100053; -- VALUE IN TREE CATEGORIES
		
		SELECT DISTINCT
			T400.VKNZIELART,
			T400.VKNZIELNR,
			T400.GENARTNR,
			T001.MARKE AS MARKE,
			T200.ARTNR AS ARTNR,				
			IFNULL(GET_BEZNR(T324.BEZNR, @SPRACHNR), '') AS ASSEMBLY_GROUP,
			CONCAT(IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), ''), IFNULL(CONCAT(' ', GET_BEZNR(T200.BEZNR, @SPRACHNR)), '')) AS `NAMEPRODUCT`,
			IFNULL(GET_BEZNR(T323.BEZNR, @SPRACHNR), '') AS STANDARD_GROUP,			
			IFNULL(GET_BEZNR(T325.BEZNR, @SPRACHNR), '') AS PURPOSE_GROUP
		FROM `301` AS T301
			JOIN `302` AS T302 ON T302.NODE_ID = T301.NODE_ID			
			JOIN `400` AS T400 ON T302.GENARTNR = T400.GENARTNR					
			JOIN `320` AS T320 ON T320.GENARTNR = T400.GENARTNR
			JOIN `200` AS T200 ON T200.ARTNR = T400.ARTNR AND T200.DLNR = T400.DLNR						
			JOIN `001` AS T001 ON T001.DLNR = T200.DLNR			
			LEFT JOIN `323` AS T323 ON T323.NARTNR = T320.NARTNR
			LEFT JOIN `324` AS T324 ON T324.BGNR = T320.BGNR
			LEFT JOIN `325` AS T325 ON T325.VERWNR = T320.VERWNR
		WHERE T301.TREETYPNR = @TREETYPNR	
			AND T301.NODE_ID = @NODE_ID
			AND T400.VKNZIELART = @VKNZIELART
			AND T400.VKNZIELNR = @KTYPE
		ORDER BY ASSEMBLY_GROUP, NAMEPRODUCT;
		
		
	 ---------------------------------
	 5.5. Generate list trade groups for selected vehicle
	 
		-- SHOWING LIST TRADE GROUP
		-- COLUMNS "STANDARD_GROUP" AND "PURPOSE_GROUP" ARE JUST FOR ADDIITONAL INFO, YOU CAN USE ONLY FIRST 3 COLUMNS FOR VIEW
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPE=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		SET @VKNZIELART = 2; -- MARK THAT THIS IS PASSANGER CAR, 16 - IS TRUCK
		
		SELECT DISTINCT								
			T320.GENARTNR,
			IFNULL(GET_BEZNR(T324.BEZNR, @SPRACHNR), '') AS ASSEMBLY_GROUP,
			IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), '') AS `NAMEPRODUCT`,
			IFNULL(GET_BEZNR(T323.BEZNR, @SPRACHNR), '') AS STANDARD_GROUP,			
			IFNULL(GET_BEZNR(T325.BEZNR, @SPRACHNR), '') AS PURPOSE_GROUP
		FROM `400` AS T400
			JOIN `320` AS T320 ON T320.GENARTNR = T400.GENARTNR
			LEFT JOIN `323` AS T323 ON T323.NARTNR = T320.NARTNR
			LEFT JOIN `324` AS T324 ON T324.BGNR = T320.BGNR
			LEFT JOIN `325` AS T325 ON T325.VERWNR = T320.VERWNR
		WHERE T400.VKNZIELART = @VKNZIELART
			AND T400.VKNZIELNR = @KTYPE
		ORDER BY ASSEMBLY_GROUP, NAMEPRODUCT;
		
			-- FOR EXAMPLE FOR THIS CAR IS INTERESTED PRODUCT "Clutch" => "Clutch Disc" WHERE VALUE GENARTNR = 262
			 
	 ---------------------------------
	 5.6. List products according selected trade group for selected vehicle
	 
		-- SHOWING LIST PRODUCTS ACCORDING NECESSARY TARDE GROUP THAT USE FOR NECESSARY CAR	
		-- ALSO FOR THIS QUERY CAN USE AS SUBVALUE/SUBQUERY VALUES FROM QUERY 4.9. FOR POSSIBILITY IN ONE RESULT SEE ALSO TERMS USE PRODUCTS FOR CAR		
		SET @SPRACHNR=4;  -- SELECTED ID LANG (ENGLISH)		
		SET @KTYPE=23150; -- SELECTED TYPE CAR "VOLVO V70 III (BW) 2.5 T [200708 - 200912]"
		SET @VKNZIELART = 2; -- MARK THAT THIS IS PASSANGER CAR, 16 - IS TRUCK
		SET @GENARTNR = 262; -- Trade group "Clutch" => "Clutch Disc"
		
		SELECT DISTINCT
			T400.VKNZIELART,
			T400.VKNZIELNR,
			T400.GENARTNR,
			T001.MARKE AS MARKE,
			T200.ARTNR AS ARTNR,				
			IFNULL(GET_BEZNR(T324.BEZNR, @SPRACHNR), '') AS ASSEMBLY_GROUP,
			CONCAT(IFNULL(GET_BEZNR(T320.BEZNR, @SPRACHNR), ''), IFNULL(CONCAT(' ', GET_BEZNR(T200.BEZNR, @SPRACHNR)), '')) AS `NAMEPRODUCT`,
			IFNULL(GET_BEZNR(T323.BEZNR, @SPRACHNR), '') AS STANDARD_GROUP,			
			IFNULL(GET_BEZNR(T325.BEZNR, @SPRACHNR), '') AS PURPOSE_GROUP
		FROM `400` AS T400
			JOIN `320` AS T320 ON T320.GENARTNR = T400.GENARTNR
			JOIN `200` AS T200 ON T200.ARTNR = T400.ARTNR AND T200.DLNR = T400.DLNR						
			JOIN `001` AS T001 ON T001.DLNR = T200.DLNR
			LEFT JOIN `323` AS T323 ON T323.NARTNR = T320.NARTNR
			LEFT JOIN `324` AS T324 ON T324.BGNR = T320.BGNR
			LEFT JOIN `325` AS T325 ON T325.VERWNR = T320.VERWNR
		WHERE T400.VKNZIELART = @VKNZIELART
			AND T400.VKNZIELNR = @KTYPE
			AND T400.GENARTNR = @GENARTNR
		ORDER BY ASSEMBLY_GROUP, NAMEPRODUCT;
		
	 ---------------------------------
	 
	 
	 
	 
	 
	 